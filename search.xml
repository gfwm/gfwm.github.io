<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Java数据类型]]></title>
    <url>%2F2018%2F07%2F28%2FJava%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%2F</url>
    <content type="text"><![CDATA[Java基本数据类型###当创建变量的时候，需要在内存中申请空间。内存管理系统根据变量的类型分配存储空间，分配的空间只能用来存储该类型数据 ##Java的两大数据类型： 内置数据类型 引用数据类型##内置数据类型java语言提供了八种基本类型。六种数字类型（四种整数类型，两种浮点型），一种字符类型，还有一种布尔型。###byte byte数据类型是八位，有符号的，以二进制补码表示的整数； 最小值是-128，最大值127（2*7-1）； 默认值0； byte类型用于在大型数组中节约空间，主要代替整数，因为byte变量占用的空间只有int类型的四分之一；###short short数据类型是16位，有符号的以二进制补码表示的整数 最小值是-32768，最大值32767； 一个short变量是int空间的二分之一； 默认值是0；###int int数据类型是32位，有符号的以二进制为补码的整数 最小值是 -2,147,483,648（-2^31）最大值是 2,147,483,647（2^31 - 1）； 一般整型变量默认为int型； 默认值是0；###long long数据类型是64位，有符号的以二进制为补码的整数 最小值是-9,223,372,036,854,775,808（-2^63）；最大值是 9,223,372,036,854,775,807（2^63 -1）； 主要用于比较大整数的系统 默认值为0；###float float是单精度，32位的浮点数； float在存储大型浮点数组的时候可以节省内存空间； 默认值是0.0f； 浮点数不能用来表示精确的值，如货币；###double double数据类型是双精度，64位的浮点数； 只有两个取值：true false 默认值false###char char类型是一种单一的16位Unicode字符 最小值是\u0000(即0)； 最大值是\uffff(即65535); char类型可以存储任何字符##实际上，JAVA中还存在另外一种基本类型void，它也有对应的包装类 java.lang.Void，不过我们无法直接对它们进行操作。]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F07%2F28%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
